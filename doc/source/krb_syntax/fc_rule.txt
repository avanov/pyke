restindex
    crumb: Fc_rule
    page-description:
        The syntax of a forward-chaining rule.
    /description
    format: rest
    encoding: utf8
    output-encoding: utf8
    include: yes
    initialheaderlevel: 2
/restindex

=============================================
Fc_rule Syntax
=============================================

Fc_rule
=============

Forward-chaining_ rules_ have three parts:

#. A unique name.
#. An optional ``foreach`` clause.
#. An ``assert`` clause.

::

    fc_rule ::= IDENTIFIER ':' NL INDENT
                   [fc_foreach]
                   fc_assert
                DEINDENT

The ``IDENTIFIER`` uniquely names this rule_ and is used as the corresponding
python function name in the generated <rb_name>_fc.py file.

Foreach clause
=================

::

    fc_foreach ::= 'foreach' NL INDENT
                       {fc_premise NL}
                   DEINDENT

    fc_premise ::= fact_pattern
                 | python_premise

    fact_pattern ::= IDENTIFIER '.' IDENTIFIER '(' [{pattern,}] ')'

Here are links to the definitions for pattern_ and python_premise_.

If the ``foreach`` clause is **not** used, the rule_ is always fired once.

If the ``foreach`` clause **is** used, the rule_ is fired for each
combination of true premises.

Assert clause
=================

::

    fc_assert ::= 'assert' NL INDENT
                      {assertion NL}
                  DEINDENT

    assertion ::= fact_pattern
                | 'python' ':' NL INDENT
                      {python_statement NL}
                  DEINDENT

The ``assert`` clause lists new facts_ to assert, and/or python
statements to execute each time the rule_ is fired.  Each of these may
include `pattern variables`_ which should also appear in the ``foreach``
clause where they are bound to a value.  These values will then be substituted
into the facts_ and python statements.

.. _facts: ../overview/knowledge_bases/fact_bases.html#facts
.. _forward-chaining: ../overview/rules/forward_chaining.html
.. _pattern: pattern.html
.. _pattern variable: pattern.html#pattern-variable
.. _pattern variables: `pattern variable`_
.. _python_premise: python_premise.html
.. _rule: ../overview/rules/index.html
.. _rules: rule_
